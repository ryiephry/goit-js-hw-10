{"mappings":"AAKA,IAAIA,EAAe,GAElBC,MAJW,sCAID,CAACC,QAAS,CACf,YAJU,2EAMdC,MAAMC,GACEA,EAASC,SAElBF,MAAMG,IAGJA,EAAOA,EAAKC,QAAOC,I,IAAMC,EAAA,OAAgB,OAAP,QAATA,EAAAD,EAAIE,aAAK,IAATD,OAAA,EAAAA,EAAWE,IAAS,IAE9CX,EAAeM,EAEd,IAAK,IAAIM,EAAI,EAAGA,EAAIZ,EAAaa,OAAQD,IAAK,CAC7C,MAAME,EAAQd,EAAaY,GAC3B,IAAIG,EAASC,SAASC,cAAc,UAG/BH,EAAMJ,QAGXK,EAAOG,MAAQN,EACfG,EAAOI,UAAY,GAAGL,EAAMM,OAC5BJ,SAASK,cAAc,iBAAiBC,YAAYP,G,CAUxD,IAAwBQ,IANN,EAQhBP,SAASQ,eAAe,eAAeC,IAAKzB,EAAauB,GAAOb,MAAMC,GARpD,IAEnBe,OAAM,SAASC,GACbC,QAAQC,IAAIF,E","sources":["src/index.js"],"sourcesContent":["// import axios from \"axios\";\n// axios.defaults.headers.common[\"x-api-key\"] = \"live_JkIDDOSMLEOX7RxnSCknMTfyPGIScNdHrVgoxdX9KjEQULxovwvDQAbEsCBDOyHU\";\n\nconst url = `https://api.thecatapi.com/v1/breeds`;\nconst api_key = \"live_JkIDDOSMLEOX7RxnSCknMTfyPGIScNdHrVgoxdX9KjEQULxovwvDQAbEsCBDOyHU\"\nlet storedBreeds = []\n\n fetch(url,{headers: {\n      'x-api-key': api_key\n    }})\n .then((response) => {\n   return response.json();\n })\n.then((data) => {\n   \n   //filter to only include those with an `image` object\n   data = data.filter(img=> img.image?.url!=null)\n   \n  storedBreeds = data;\n   \n   for (let i = 0; i < storedBreeds.length; i++) {\n    const breed = storedBreeds[i];\n    let option = document.createElement('option');\n     \n     //skip any breeds that don't have an image\n     if(!breed.image)continue\n     \n    //use the current array index\n    option.value = i;\n    option.innerHTML = `${breed.name}`;\n    document.querySelector('.breed-select').appendChild(option);\n    \n    }\n   //show the first breed by default\n   showBreedImage(0)\n})\n.catch(function(error) {\n   console.log(error);\n});\n\nfunction showBreedImage(index)\n{ \n  document.getElementById(\"breed_image\").src= storedBreeds[index].image.url;\n  \n//   document.getElementById(\"breed_json\").textContent= storedBreeds[index].temperament\n  \n  \n//   document.getElementById(\"wiki_link\").href= storedBreeds[index].wikipedia_url\n//   document.getElementById(\"wiki_link\").innerHTML= storedBreeds[index].wikipedia_url\n}"],"names":["$1f0dc3b9307be026$var$storedBreeds","fetch","headers","then","response","json","data","filter","img","ref","image","url","i","length","breed","option","document","createElement","value","innerHTML","name","querySelector","appendChild","index","getElementById","src","catch","error","console","log"],"version":3,"file":"index.54b81e8b.js.map"}